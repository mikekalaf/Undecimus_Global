/* 
  Localizable.strings
  Undecimus

  Created by 呼延宇丰 on 2019/7/4.
  Copyright © 2019 Pwn20wnd. All rights reserved.
*/
"Days" = "天";
"Load Tweaks" = "加载插件";
"Load Daemons" = "加载进程";
"Dump APTicket" = "转储 APTicket";
"Refresh Icon Cache" = "重建图标缓存";
"Disable Updates" = "禁用自动更新";
"Disable Revokes" = "禁用App签名检测";
"Set Boot Nonce" = "设置 Boot Nonce";
"Export TFP0" = "导出TFP0";
"Description:\n\nThis option hides the log window or console in the jailbreak app for a more clean look." = "\n此选项用于关闭首页的日志输出窗口，如果您希望获得一个简洁的首页，请启用此项。";
"Description:\n\nThis option makes Substrate load extensions that are commonly referred to as tweaks in newly started processes.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项使 Substrate 在下一次点击越狱按钮时加载插件.\n注：关闭此选项效果相当于安全模式\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes jailbreak reinstall the cydiainstaller package.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项以在下一次点击越狱按钮时重新安装Cydia。\n\n兼容性：\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak (re)install the openssh package.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项将在下一次点击越狱按钮时(重新)安装OpenSSH\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak automatically restart the SpringBoard as soon as the jailbreak process is completed without the confirmation.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项将在越狱完成后自动重新载入SpringBoard\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak create a copy of the system APTicket located at \/System\/Library\/Caches\/apticket.der at its Documents directory which is accessible via iTunes File Sharing.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会在越狱过程中创建系统APTicket(\/System\/Library\/Caches\/apticket.der)的拷贝并输出到Documents文件夹，可通过iTunes文件共享访问。\n\兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak dynamically enable the get-task-allow entitlement for every new process.\nThis option makes dyld treat the processes unrestricted.\nThis option enables dyld environment variables such as DYLD_INSERT_LIBRARIES.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项会使越狱为每个新的进程动态启用get-task-allow权限。\n此项会使dyld不受限制地处理进程。\n此项会启用dyld环境变量\n(例如DYLD_INSERT_LIBRARIES)\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak dynamically set the CS_DEBUGGED codesign flag for every new process.\nThis option makes the kernel allow processes to run with invalid executable pages.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项使越狱动态地为每个新进程设置 CS_DEBUGGED 代码签名标志。\n此项会使内核允许进程使用无效的分页文件运行\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak effectively disable the system's online certificate status protocol system to prevent enterprise certificates which the jailbreak may be signed with from getting revoked.\n\nCompatibility:\n\niOS 11.0-11.4.1 on arm64 SoCs (A7-A11)." = "\n启用此项会禁用系统签名认证，防止证书被吊销\n\n兼容性:\n\n支持 iOS 11.0-11.4.1 的 arm64(A7-A11) SoC 设备";
"Description:\n\nThis option makes the jailbreak effectively disable the system's software update mechanism to prevent the system from automatically upgrading to the latest available firmware which may not be supported by the jailbreak at that time.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会禁用系统自动更新\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak load the launch daemons located at \/Library\/LaunchDaemons and execute files located at \/etc\/rc.d.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会使越狱工具加载位于\/Library\/LaunchDaemons的自定义进程和位于\/etc\/rc.d的可执行文件\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak modify the Jetsam configuration file to increase the memory limit that is enforced upon processes by Jetsam to the maximum value to effectively bypass that mechanism.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项使越狱通过修改Jetsam配置文件，将Jetsam对进程的内存限制提高到最大值，从而有效地绕过内存限制。\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak modify the host-port to grant any process access to the host-priv-port.\nThis option effectively grants any process access to the kernel task port (TFP0) and allows re-jailbreaking without exploiting again.\nThis option is considered unsafe as the privilege this option effectively grants to processes can be used for bad purposes by malicous apps.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项使越狱程序修改host-port，以授予对host-private-port的任意进程访问权。\n此项可以授权任何进程访问 kernel task port (TFP0)，且重新越狱不再需要执行漏洞。\n请谨慎开启此项，TFP0访问权可能被恶意程序利用！\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak regenerate SpringBoard's system application installation cache to cause newly installed .app bundles to appear on the icon list.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会使越狱工具清除 SpringBoard 系统应用安装缓存。\n此项一般用于修复应用程序图标消失(已安装但未出现在桌面)\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak reload all of the running system daemons to make the Substrate extensions (tweaks) load in them.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项会使越狱工具重新载入所有正在运行的系统进程，使Substrate扩展(插件)与系统进程一起载入。\n关闭此选项会加快越狱完成后重启SpringBoard的速度，但有可能造成一些问题。\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak reset Cydia's cache.\nThis option will cause Cydia to regenerate the repo lists and its cache.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64 SoCs (A7-A11)." = "\n启用此项会使越狱工具清除Cydia缓存。\n此项会造成Cydia需要重新刷新源列表才能搜索插件。\n\n兼容性:\n\n支持 iOS 11.0-12.1.2 的 arm64(A7-A11) SoC 设备。";
"Description:\n\nThis option makes the jailbreak restore the root filesystem (RootFS) to the snapshot which is created by the system when the device is restored.\nThis option effectively allows uninstalling the jailbreak without losing any user data.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会将 Root文件系统 还原到越狱前创建的快照。\n此项可以保数据清除越狱环境，但是部分软件仍能检测到越狱，且重新越狱后源列表和插件配置不丢失。\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak set the persistent com.apple.System.boot-nonce variable in non-volatile random-access memory (NVRAM) which may be required to downgrade to an unsigned iOS firmware by using SHSH files.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n此项会使越狱工具在com.apple.System.boot-nonce中添加Generator(G值)用于降级或平刷。\n\n请注意！！！从Apple发布iOS12.2后，再使用@糖醋-炒排骨的降级方法会出现FortNightBUG。启用 触控ID 和 面容ID 设备会在降级完成的1-3周内随机重启到恢复模式且无法踢出，必须重新平刷。\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Description:\n\nThis option makes the jailbreak skip installing Cydia and Substrate.\nThis option starts SSH on 127.0.0.1 (localhost) on port 22 via dropbear.\n\nCompatibility:\n\niOS 11.0-12.1.2 on arm64\/arm64e SoCs (A7-A12X)." = "\n启用此项会使越狱工具跳过安装Cydia和Substrate，直接打开SSH。\n此项通过dropbear在localhost(127.0.0.1:22)上启用SSH\n\n兼容性：\n\n支持iOS 11.0-12.1.2 的 arm64\/arm64e SoCs 设备 (A7-A12X).";
"Error" = "错误";
"Jailbreak" = "越狱";
"Jailbreaking" = "正在执行越狱";
"Jailbroken" = "已越狱";
"Name" = "名";
"No" = "不要";
"OK" = "好";
"Re-Jailbreak" = "重新越狱";
"Ready to re-jailbreak" = "已准备好重新越狱";
"Ready to jailbreak" = "已准备好执行越狱";
"Ready to restore RootFS" = "已准备好恢复 Root文件系统";
"System" = "系统";
"Unavailable" = "不可用";
"Unsupported" = "不支持的设备";
"Yes" = "是";
"View Log" = "查看日志";
"unc0ver Version" = "unc0ver 版本";
"Preferences were reset. The app will now exit." = "成功恢复默认设置！App即将退出";
"Restore RootFS" = "恢复 Root文件系统";
"Max Memory Limit" = "增大内存限制";
"(Re)Install OpenSSH" = "(重新)安装 OpenSSH";
"ReInstall Cydia" = "重新安装 Cydia";
"Reload Daemons" = "重新加载系统进程";
"Hide Log Window" = "隐藏日志窗口";
"Reset Cydia Cache" = "清除Cydia缓存";
"SSH Only" = "仅开启SSH";
"Set get-task-allow" = "设置 get-task-allow";
"Set CS_DEBUGGED" = "设置 CS_DEBUGGED";
"Auto Respring" = "自动重新加载 SpringBoard";
"Notice" = "提示";
"Failed to check for update." = "检查更新失败！\n请检查网络连接";
"An update is available." = "发现新的官方版unc0ver";
"Already up to date." = "已经是最新版";
"Copy ECID?" = "复制 ECID";
"Would you like to copy ECID to clipboard?" = "是否复制 ECID 到剪贴板？";
"Copy boot nonce?" = "复制 Boot Nonce?";
"Would you like to copy nonce generator to clipboard?" = "是否复制 Boot Nonce(Generator值) 到剪贴板？";
"The device will be restarted." = "设备即将重启";
"Invalid Entry" = "无效的输入";
"The boot nonce entered could not be parsed" = "输入的 Boot Nonce 格式有误！";
"Unavailable" = "不可用";
"SpringBoard will be restarted." = "SpringBoard 即将重启";
"Unable to get task port for backboardd." = "未能获得进程 backboardd 的端口";
"Unable to make backboardd exit." = "未能成功退出 backboardd";
"Cleaned diagnostics data." = "成功清除诊断数据！";
"Preference was changed. The app will now exit." = "成功更改设置！App即将退出";
"UI Localization：xapenny | u0 Version: %@" = "UI国际化：xapenny | u0 版本: %@";
"Bundled Resources version is missing. This build is invalid." = "资源包信息丢失。此版本无效，请重新下载";
"[*] Machine Name: %s" = "\n[*] 设备名称：%s";
"[*] Model Name: %s" = "\n[*] 设备型号：%s";
"[*] unc0ver Version: %@" = "\n[*] unc0ver 版本：%@";
"Unable to repair system." = "未能成功修复系统";
"Unable to update apt package index." = "未能成功更新apt软件包目录";
"Unable to resolve dependencies for apt." = "未能成功部署apt依赖包";
"Unable to get repo path." = "未能成功获取apt软件源地址";
"Unable to install debs for apt." = "未能成功安装apt插件";
"[*] Installing manually exctracted debs..." = "\n[*] 正在安装手动添加的插件";
"Unable to install manually extracted debs." = "未能安装手动添加的插件";
"[*] Kernel Version: %s" = "\n[*] 内核版本：%s";
"[*] Kernel Page Size: 0x%lx" = "\n[*] 内核分页文件大小：0x%lx";
"[*] System Version: iOS %s (%s) (Build: %s)" = "\n[*] 系统版本：iOS %s (%s) (内部版本: %s)";
"[*] Progress: %@" = "\n[*] 当前进度：%@";
"[*] Status: %@" = "\n[*] 当前状态：%@";
"[*] Bundled Resources Version: %@" = "\n[*] 资源包版本：%@";
"[*] gettimeofday failed" = "\n[*] 获取当前时间失败";
"WARNING" = "警告";
"Will Restore RootFS.\n\nJailbreak will be REMOVED!" = "即将恢复 Root文件系统\n\n越狱环境将被清除！";
"Jailbreak Completed" = "越狱已完成";
"Jailbreak Completed with Status:" = "越狱已成功完成如下操作：";
"Loaded Tweaks.\n" = "已加载插件\n";
"Unable to load tweaks." = "未能加载插件";
"Loading Tweaks..." = "正在加载插件。。。";
"Flushing preference cache..." = "正在清理设置缓存。。。";
"Unable to flush preference cache." = "未能清理设置缓存";
"Flushed preference cache.\n" = "已清理设置缓存\n";
"Ran uicache.\n" = "已运行 uicache\n";
"Unable to refresh icon cache." = "未能重建图标缓存";
"Refreshing icon cache..." = "正在重建图标缓存。。。";
"Reset Cydia Cache.\n" = "已清理 Cydia 缓存\n";
"Unable to clean Cydia's directory." = "未能清理 Cydia 目录";
"Unable to clean Cydia's cache directory." = "未能清理 Cydia 缓存目录";
"Resetting Cydia cache..." = "正在清理 Cydia 缓存。。。";
"Loaded Daemons.\n" = "已加载进程\n";
"Loading Daemons..." = "正在加载进程。。。";
"Installed Cydia.\n" = "已安装 Cydia\n";
"Installing Cydia..." = "正在安装 Cydia。。。";
"Unable to get Cydia version." = "未能获取 Cydia 版本";
"Unable to reinstall Cydia." = "未能重新安装 Cydia";
"Unable to remove Electra's Cydia Upgrade Helper." = "未能清除 Electra越狱 的 Cydia 升级助手";
"Removing Electra's Cydia Upgrade Helper..." = "正在清除 Electra越狱 的 Cydia 升级助手。。。";
"Removed Cydia Dummy Package.\n" = "已清除 Cydia Dummy Packages\n";
"Removing Cydia Dummy Package..." = "正在清除 Cydia Dummy Packages。。。";
"Unable to remove Cydia Dummy Package." = "未能清除 Cydia Dummy Packages";
"Installed OpenSSH.\n" = "已安装 OpenSSH\n";
"Unable to install OpenSSH." = "未能安装 OpenSSH";
"Installing OpenSSH..." = "正在安装 OpenSSH。。。";
"Restored Memory Limit.\n" = "已恢复内存限制\n";
"Unable to update Jetsam plist to restore memory limit." = "未能通过更新 Jetsam plist 来恢复内存限制";
"Restoring memory limit..." = "正在恢复内存限制。。。";
"Increasing memory limit..." = "正在增加内存限制。。。";
"Unable to update Jetsam plist to increase memory limit." = "未能通过更新 Jetsam plist 来增加内存限制";
"Increased Memory Limit.\n" = "已增加内存限制\n";
"Unable to get hardware targettype." = "未能获取硬件平台k类型";
"Fixed Storage Preferences.\n" = "已修复存储Bug\n";
"Unable to load softwareupdated launch daemon." = "未能加载 softwareupdated 启动项";
"Unable to load softwareupdateservicesd launch daemon." = "未能加载 softwareupdateservicesd 启动项";
"Unable to fix path for softwareupdateservicesd." = "未能修复 softwareupdateservicesd 环境变量";
"Unable to to fix path for softwareupdated." = "未能修复 softwareupdated 环境变量";
"Fixing storage preferences..." = "正在修复存储Bug。。。";
"Extracted Bootstrap.\n" = "已解压 Bootstrap\n";
"Unable to upgrade apt packages." = "未能更新 apt 软件包";
"Unable to configure installed packages." = "未能配置已安装的软件包";
"Unable to disable stashing." = "未能禁用文件转移";
"Unable to create bootstrap marker file." = "未能创建 Bootstrap 制作文件";
"Unable to remove LetMeBlock." = "未能卸载 LetMeBlock";
"Unable to remove NoBetaAlert." = "未能卸载 NoBetaAlert";
"Unable to install %s." = "未能安装 %s";
"Unable to remove Substitute." = "未能删除 Substitute";
"Unable to create local repo." = "未能创建本地软件源";
"Unable to remove old resources." = "未能删除旧软件源";
"Unable to remove old-development resources." = "未能删除旧开发者资源";
"Unable to create virtual dependencies." = "未能创建虚拟依赖";
"Unable to install deb for dpkg." = "未能安装 dpkg";
"Unable to extract dpkg." = "未能解压 dpkg";
"Extracting bootstrap..." = "正在解压 Bootstrap。。。";
"Loaded %s.\n" = "已加载 %s.\n";
"Unable to %@ %s." = "未能 %@ %s";
"Unable to move %s bootstrap tools directory." = "未能移动 %s bootstrap tools 文件夹";
"Unable to clean old %s bootstrap tools directory." = "未能清理旧 bootstrap tools 文件夹";
"Starting %s..." = "正在启动 %s。。。";
"Unable to disable %s's loader." = "未能禁用 %s 的启动器";
"Configuring %s..." = "正在配置 %s。。。";
"Repaired Filesystem.\n" = "已修复文件系统\n";
"Unable to repair caches directory for %s." = "未能修复%s的缓存目录";
"Unable to symlink dpkg database." = "未能建立 dpkg 软链接";
"Unable to repair dpkg database." = "未能修复 dpkg 数据库";
"Unable to repair dpkg status file." = "未能修复 dpkg 状态文件";
"Unable to repair dpkg available file." = "未能修复 dpkg 可用文件";
"Unable to restore dpkg database." = "未能恢复 dpkg 数据库";
"Unable to clean old dpkg database." = "未能清理旧 dpkg 数据库";
"Unable to repair state information directory" = "未能修复旧状态信息文件";
"Repairing filesystem..." = "正在修复文件系统。。。";
"Injected trust cache.\n" = "已注入 trust cache\n";
"Injecting trust cache..." = "正在注入 trust cache。。。";
"Copied over resources to RootFS.\n" = "已复制资源文件到 Root文件系统\n";
"Unable to create symlink for ldid." = "未能建立 ldid 软链接";
"Unable to access ldid." = "未能访问 ldid";
"Unable to repair packages." = "未能修复软件包";
"Unable to get debs for packages to repair." = "未能获取将要修复的软件包deb";
"Unable to get resource packages." = "未能获取资源包";
"Unable to extract %s." = "未能解压 %s";
"Unable to get deb for %s." = "未能获取 %s deb";
"Unable to extract apt package lists." = "未能解压 apt 软件包列表";
"Unable to uninstall RootLessJB." = "未能卸载 RootLessJB";
"Unable to change working directory to RootFS." = "未能将工作目录转移到 Root文件系统";
"Copying over resources to RootFS..." = "正在复制资源文件到 Root文件系统";
"Enabled SSH.\n" = "已开启 SSH\n";
"Unable to create dropbear launch daemon." = "未能创建 dropbear 启动项";
"Unable to initialize dropbear launch daemon." = "未能初始化 dropbear 启动项";
"Unable to allocate memory for dropbear plist." = "无法为 dropbear plist 分配内存";
"Unable to setup binpack." = "未能安装 binpack";
"Enabling SSH..." = "正在开启 SSH。。。";
"Allowed SpringBoard to show non-default system apps.\n" = "已允许 SpringBoard 显示非默认的系统程序\n";
"Allowing SpringBoard to show non-default system apps..." = "正在使 SpringBoard 显示非默认的系统程序";
"Unable to update SpringBoard preferences." = "未能更新 SpringBoard 配置";
"RootFS has been successfully restored. The device will now be restarted." = "已成功恢复 Root文件系统。设备即将重新启动。";
"Unable to call reboot." = "未能重新启动设备";
"Unable to reboot device." = "未能重新启动设备";
"Restored RootFS.\n" = "已恢复 Root文件系统\n";
"Unable to clean find binary." = "未能清除 find";
"Unable to clean uicache binary." = "未能清除 uicache";
"Unable to refresh icon cache." = "未能重建图标缓存";
"Unable to unmount original snapshot mount point." = "";
"Unable to extract uikittools." = "未能解压 uikittools";
"Unable to extract rsync." = "未能解压 rsync";
"Unable to verify mounted snapshot." = "未能验证已挂载的 Root文件系统";
"Unable to mount original snapshot." = "未能挂载原始快照";
"Unable to create snapshot mount point." = "未能创建快照挂载点";
"Unable to clean old snapshot mount point." = "未能清除旧快照挂载点";
"Unable to rename original snapshot." = "未能重命名原始快照";
"Unable to copy system snapshot." = "未能复制系统快照";
"Unable to find original snapshot for RootFS." = "找不到原始 Root文件系统 快照文件";
"Found no snapshot for RootFS." = "找不到 Root文件系统 快照文件";
"Unable to get snapshots for RootFS." = "未能获取 Root文件系统 快照文件";
"Unable to open RootFS." = "打不开 Root文件系统";
"Will restore RootFS. This may take a while. Don't exit the app and don't let the device lock." = "即将恢复 Root文件系统。这需要一点时间，请勿退出app或锁定设备。";
"Restoring RootFS..." = "正在恢复 Root文件系统。。。";
"Caching offsets..." = "正在缓存 offsets。。。";
"Unable to cache offsets to file." = "未能将 offsets 缓存到文件";
"Unable to set permissions for offset cache file." = "未能设置 offsets 缓存文件权限";
"Cached Offsets.\n" = "已缓存 offsets\n";
"Successfully cached offsets." = "成功缓存 offsets";
"Created jailbreak directory.\n" = "已建立越狱目录\n";
"Unable to change working directory to jailbreak directory." = "";
"Unable to create jailbreak directory." = "未能建立越狱目录";
"Creating jailbreak directory..." = "正在建立越狱目录。。。";
"Enabled App Revokes.\n" = "已启用App签名验证\n";
"Enabling app revokes..." = "正在启用App签名验证。。。";
"Disabled App Revokes.\n" = "已禁用App签名验证\n";
"Disabling app revokes..." = "正在禁用App签名验证。。。";
"Writing a test file to RootFS..." = "正在向 Root文件系统 写入测试文件。。。";
"Remounted RootFS.\n" = "已重新挂载 Root文件系统\n";
"Unable to create stock snapshot." = "未能创建固定快照";
"Unable to rename oldest snapshot." = "未能重命名旧快照";
"Unable to print new mount list." = "未能输出新挂载列表";
"Unable to close RootFS vnode." = "未能关闭 Root文件系统 vnode";
"Unable to remount RootFS." = "未能重新挂载 Root文件系统";
"Unable to allocate memory for ops." = "未能为 ops 分配内存";
"Unable to get mount info for RootFS." = "未能获取 Root文件系统 挂载信息";
"Unable to get vnode for RootFS." = "未能获取 Root文件系统 vnode";
"The system snapshot has been successfully renamed. The device will now be restarted." = "系统快照已被重命名，设备即将重新启动。";
"Unable to close system snapshot vnode." = "未能关闭系统快照 vnode";
"Unable to rename system snapshot." = "未能重命名系统快照";
"Unable to get vnode data for system snapshot." = "未能获取系统快照vnode";
"Unable to get vnode for system snapshot." = "未能获取系统快照vnode";
"Unable to create test snapshot." = "未能创建测试快照";
"Unable to delete test snapshot." = "未能删除测试快照";
"Unable to get SystemVersion.plist for newly mounted RootFS." = "未能在新挂载的 Root文件系统 上获取 SystemVersion.plist";
"Unable to get SystemVersion.plist for RootFS." = "未能在 Root文件系统 上获取 SystemVersion.plist";
"Unable to clear old original system snapshot." = "未能清除旧系统快照";
"Unable to get snapshots for newly mounted RootFS." = "未能在新挂载的 Root文件系统 上获取快照";
"Unable to open newly mounted RootFS." = "打不开新挂载的 Root文件系统";
"Unable to verify newly mounted RootFS." = "未能验证新挂载的 Root文件系统";
"RootFS already mounted, delete OTA file from Settings - Storage if present and reboot." = "Root文件系统已被挂载！请前往设置 - 通用 - 存储空间删除OTA更新文件并重启设备。";
"Enabled Auto Updates.\n" = "已启用自动更新\n";
"Unable to enable software update badge." = "";
"Enabling Auto Updates..." = "正在启用自动更新。。。";
"Disabled Auto Updates.\n" = "已禁用自动更新\n";
"Unable to disable software update badge." = "未能清除设置图标的角标";
"Disabling Auto Updates..." = "正在禁用自动更新。。。";
"Logged ECID.\n" = "已输出 ECID\n";
"Logging ECID..." = "正在输出 ECID。。。";
"Overwrote boot nonce.\n" = "已覆盖 boot nonce\n";
"Locking nvram..." = "正在锁定nvram。。。";
"Unable to lock nvram." = "未能锁定nvram";
"Unlocking nvram..." = "正在解锁nvram。。。";
"Dumped APTicket.\n" = "已转储 APTicket\n";
"Unable to dump APTicket." = "未能转储 APTicket";
"Dumping APTicket..." = "正在转储 APTicket。。。";
"Writing a test file to UserFS..." = "正在向 用户文件系统 写入测试文件。。。";
"Initializing jailbreak..." = "正在初始化越狱。。。";
"Finding offsets..." = "正在查找 offsets。。。";
"Initializing patchfinder..." = "正在初始化 patchfinder。。。";
"Exploited kernel.\n" = "已攻破内核\n";
"Successfully exploited kernel." = "成功攻破内核";
"No exploit selected." = "未选择漏洞";
"Exploiting kernel..." = "正在攻破内核。。。";
"Unable to get host port." = "未能获取 host port";
"Unable to exploit kernel. This is not an error. Reboot and try again." = "未能攻破内核。这不是一个错误，请重启设备再试。";
"\nRead %zu bytes from kernel memory\nWrote %zu bytes to kernel memory\n" = "\n已从内核存储中读取了 %zu bytes数据\n写入了 %zu bytes数据";
"\nJailbroke in %ld seconds\n" = "\n本次越狱耗时 %ld 秒\n";
"The device will now respring." = "即将重新载入SpringBoard";
"Loaded Substrate.\n" = "已加载Substrate \n";
"Set HSP4 as TFP0.\n" = "已将 HSP4 设置为 TFP0";
"Set kernel task info.\n" = "已设置内核任务信息";
"Unexported kernel task port.\n" = "未导出KTP";
"Exported kernel task port.\n" = "已导出KTP";
"Logged slide.\n" = "已记录 slide";
